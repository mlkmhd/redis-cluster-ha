apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    workload.user.cattle.io/workloadselector: deployment-redis-ha-load-balancer
  name: redis-ha-load-balancer
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.haproxy.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-redis-ha-load-balancer
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/redis-ha-config: {{ include (print $.Template.BasePath "/redis-ha-configmap.yaml") . | sha1sum }}
        checksum/haproxy-config: {{ include (print $.Template.BasePath "/haproxy-config.yaml") . | sha1sum }}
      labels:
        workload.user.cattle.io/workloadselector: deployment-redis-ha-load-balancer
    spec:
      containers:
      - image: {{ .Values.haproxy.image }}
        name: haproxy
        ports:
        - containerPort: 6379
          name: 6379tcp1
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /usr/local/etc/haproxy/haproxy.cfg
          name: vol1
          subPath: haproxy.cfg
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 511
          items:
          - key: haproxy.cfg
            mode: 511
            path: haproxy.cfg
          name: redis-ha-load-balancer-conf
          optional: false
        name: vol1
