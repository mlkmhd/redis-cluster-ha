{{- if and .Values.auth (not .Values.existingSecret) -}}
{{- $name := include "redis-ha.fullname" . -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels:
{{ include "labels.standard" . | indent 4 }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $name) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $auth to existing secret data or generate a random one when not exists
  {{- $auth := (get $secretData "auth") | default (.Values.redisPassword | default (randAlphaNum 32) | b64enc) }}
  auth: {{ $auth | quote }}
{{- end -}}
